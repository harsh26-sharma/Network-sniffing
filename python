from scapy.all import sniff
from collections import defaultdict
from scapy.all import IP, TCP 
import pandas as pd
import logging
import smtplib
from email.mime.text import MIMEText
from sklearn.model_selection import train_test_split

# Define a callback function to process each captured packet

def packet_callback(packet):
    if packet.haslayer("IP"):
        ip_src = packet["IP"].src
        ip_dst = packet["IP"].dst
        print(f"source IP: {ip_src} -> Destination IP: {ip_dst}")

# sniff packets
sniff(iface="Wi-Fi", prn=packet_callback)

# Dictionary to store source IP and the number of SYN
syn_count = defaultdict(int)

# callback functin for packet analys
def detect_syn_flood(packet):
    if packet.haslayer(TCP) and packet["TCP"].flags == "S":
        src_ip = packet[IP].src
        syn_count[src_ip] += 1
        if syn_count[src_ip] > 100:
            print(f"SYN flood detected! Source IP: {src_ip} has sent more than 100 SYN packets.")

# Start sniff for SYN flood
sniff(iface="Wi-Fi", prn=detect_syn_flood)

# traffic data (features: packet count, packet size)
data = pd.DataFrame({
    'packet_count': [5,10, 50, 100, 200, 300, 400],
    'packet_size': [100, 200, 1500, 300, 1000, 800],
    'label': [0, 1]  # 0: Normal, 1: Malicious
})
# Set up logging
logging.basicConfig(filename='nids_alert.log', level=logging.INFO)

# Set up email config
SMTP_SERVER = 'smtp.gmail.com'
SMTP_PORT = 587
FROM_email = "harshitsharma170815@gmail.com"
FROM_passwprd = "Harshit170815"


# Email alert function
def send_email_alert(subject, body):
    msg = MIMEText(body)
    msg['Subject'] = subject
    msg['From'] = 'harshitsharma170815@gmail.com'
    msg['To'] = 'harshitvashisth2003@gmail.com'


# alert logging
def log_alert(message):
    logging.info(message)
    send_email_alert("NIDS Alert", message)

# alert detection
def detect_suspicious_activity(packet):
    if packet.haslayer(TCP) and packet["TCP"]:  # SYN Flood
        log_alert("Potential SYN Flood detected!")

# NIDS monitoring function
def nids_main():
    sniff(iface="Wi-Fi", prn=detect_syn_flood)  

if __name__ == '__main__':
    nids_main()
